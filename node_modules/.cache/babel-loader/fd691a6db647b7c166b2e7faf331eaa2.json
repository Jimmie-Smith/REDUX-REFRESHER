{"ast":null,"code":"import * as redux from \"redux\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === `increment`) {\n    return state.counter += 1;\n  }\n\n  return state;\n};\n\nconst counterSubscriber = () => {\n  const latestState = store.getState();\n  console.log(latestState);\n};\n\nconst store = redux.createStore(counterReducer);\nstore.subscribe(counterSubscriber);\nstore.dispatch({\n  type: 'increment'\n});\nexport default store;","map":{"version":3,"names":["redux","counterReducer","state","counter","action","type","counterSubscriber","latestState","store","getState","console","log","createStore","subscribe","dispatch"],"sources":["C:/Users/admin/OneDrive/Documents/REDUX-CONCEPTS/REDUX-PROJECT/src/store/index.js"],"sourcesContent":["import * as redux from \"redux\";\r\n\r\nconst counterReducer = (state = { counter: 0 }, action) => {\r\n  if (action.type === `increment`) {\r\n    return (state.counter += 1);\r\n  }\r\n  return state;\r\n};\r\n\r\nconst counterSubscriber = () => {\r\n    const latestState = store.getState();\r\n    console.log(latestState);\r\n}\r\n\r\nconst store = redux.createStore(counterReducer);\r\n\r\nstore.subscribe(counterSubscriber);\r\n\r\nstore.dispatch({type: 'increment'});\r\n\r\n\r\nexport default store;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,cAAc,GAAG,YAAoC;EAAA,IAAnCC,KAAmC,uEAA3B;IAAEC,OAAO,EAAE;EAAX,CAA2B;EAAA,IAAXC,MAAW;;EACzD,IAAIA,MAAM,CAACC,IAAP,KAAiB,WAArB,EAAiC;IAC/B,OAAQH,KAAK,CAACC,OAAN,IAAiB,CAAzB;EACD;;EACD,OAAOD,KAAP;AACD,CALD;;AAOA,MAAMI,iBAAiB,GAAG,MAAM;EAC5B,MAAMC,WAAW,GAAGC,KAAK,CAACC,QAAN,EAApB;EACAC,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACH,CAHD;;AAKA,MAAMC,KAAK,GAAGR,KAAK,CAACY,WAAN,CAAkBX,cAAlB,CAAd;AAEAO,KAAK,CAACK,SAAN,CAAgBP,iBAAhB;AAEAE,KAAK,CAACM,QAAN,CAAe;EAACT,IAAI,EAAE;AAAP,CAAf;AAGA,eAAeG,KAAf"},"metadata":{},"sourceType":"module"}